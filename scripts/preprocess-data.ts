import fs from 'fs';
import path from 'path';
import cardsJson from '../src/lib/v2_Cards.json';
import monstersJson from '../src/lib/v2_Monsters.json';
import dayHoursJson from '../src/lib/v2_DayHours.json';
import { parseJson as parseCardsJson } from '../src/lib/cardsJsonParser.ts';
import { parseJson as parseMonstersJson } from '../src/lib/monstersJsonParser.ts';
import { parseJson as parseDayHoursJson } from '../src/lib/dayHoursJsonParser.ts';
import type { CardsJson, DayHoursJson, MonstersJson } from '../src/lib/types.ts';
import crypto from 'crypto';

// Define the output file paths
// TODO: It would probably make sense to store these as TypeScript for better type safety
const processedCardsPath = path.resolve('./src/lib/processedCards.json');
const processedMonstersPath = path.resolve('./src/lib/processedMonsters.json');
const processedDayHoursPath = path.resolve('./src/lib/processedDayHours.json');
const hashFilePath = path.resolve('./src/lib/versionHashes.ts');

function generateHash(content: string): string {
    return crypto.createHash('sha256').update(content).digest('hex').slice(0, 8); // Shorten to 8 characters
}

async function preprocessData() {
    try {
        // Process the cards and monsters data
        const processedCards = parseCardsJson(cardsJson as CardsJson);
        const processedMonsters = parseMonstersJson(monstersJson as MonstersJson);
        const processedDayHours = parseDayHoursJson(dayHoursJson as DayHoursJson);

        // Write processed cards data to disk
        fs.writeFileSync(processedCardsPath, JSON.stringify(processedCards, null, 2));
        console.log(`Processed cards data saved to ${processedCardsPath}`);

        // Write processed monsters data to disk
        fs.writeFileSync(processedMonstersPath, JSON.stringify(processedMonsters, null, 2));
        console.log(`Processed monsters data saved to ${processedMonstersPath}`);

        fs.writeFileSync(processedDayHoursPath, JSON.stringify(processedDayHours, null, 2));
        console.log(`Processed day hours data saved to ${processedDayHoursPath}`);

        // Generate hashes for the processed JSON data
        const cardsHash = generateHash(JSON.stringify(processedCards));
        const monstersHash = generateHash(JSON.stringify(processedMonsters));
        const dayHoursHash = generateHash(JSON.stringify(processedDayHours));

        // Write hashes to a version file
        const tsContent = `// File automatically generated by preprocess-data.ts, do not edit manually.
const versionHashes = {
    cardsHash: '${cardsHash}',
    monstersHash: '${monstersHash}',
    dayHoursHash: '${dayHoursHash}'
} as const;
 
export default versionHashes`;

        fs.writeFileSync(hashFilePath, tsContent);
        console.log(`Version hashes saved to ${hashFilePath}`);
    } catch (error) {
        console.error('Error processing data:', error);
        process.exit(1);
    }
}

preprocessData();
